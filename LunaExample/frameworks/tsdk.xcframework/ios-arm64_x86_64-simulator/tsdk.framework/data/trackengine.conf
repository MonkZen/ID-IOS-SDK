<?xml version="1.0"?>
<!--
    The config file format is optimized for deserialization of several FSDK types:
        * Int1 - scalar 32 bit integral numeric type
        * Int2 - 2-d 32 bit integral numeric type (aka Vector2i, Size)
        * Int3 - 3-d 32 bit integral numeric type
        * Int4 - 4-d 32 bit integral numeric type (aka Rect)
        * Float1 - scalar 32 bit floating point numeric type
        * Float2 - 2-d 32 bit floating point numeric type (aka Vector2f)
        * Float3 - 3-d 32 bit floating point numeric type
        * Float4 - 4-d 32 bit floating point numeric type
        * String - short null-terminated string (max. 16 characters including the null-terminator)
-->
<settings>
    <!-- Logging parameters. -->
    <section name="logging">
        <!-- mode: the mode of logging, ['l2c' - log to console only, 'l2f' - log to file, 'l2b' - log to console & file] ('l2b' by default). -->
        <param name="mode" type="Value::String" text="l2b" />

        <!-- severity: Logging severity level,  [0 - debug, 1 - info, 2 - warnings, 3 - error only], ('2' by default). -->
        <param name="severity" type="Value::Int1" x="1" />
    </section>

    <!-- Other parameters. -->
    <section name="other">
        <!-- callback-mode: TrackEngine works in async push/callback mode (1) or in the estimator mode (0), [0, 1] ('1' by default). -->
        <param name="callback-mode" type="Value::Int1" x="1" />

        <!-- detector-step: The count of frames between frames with full detection, [1 .. 30] ('7' by default). -->
        <param name="detector-step" type="Value::Int1" x="7" />

        <!-- Currently available detector comparers are: 
        0 - DctConfidence, 
        1 - DctCenter - default, 
        2 - DctCenterAndConfidence, 
        3 - DctSize -->
        <param name="detector-comparer" type="Value::Int1" x="1" />

        <!-- Currently available detector modes are: 0 - all detections on image, 1 - one detection on image, -->
        <param name="use-one-detection-mode" type="Value::Int1" x="0" />

        <!-- skip-frames: If track wasn't updated by detect/redetect for this number of frames, then track is finished ('36' by default). -->
        <!-- note: very high values may lead to performance degradation. Parameter doesn't affect on human tracking. -->
        <param name="skip-frames" type="Value::Int1" x="36" />

        <!-- frg-subtractor: Whether to enable foreground subtractor or not. -->
        <!-- This feature can drastically improve performance, especially, on sources with low level activity, but at the same time this may reduce face detection recall in rare cases., [0, 1] ('1' by default). -->
        <param name="frg-subtractor" type="Value::Int1" x="1" />

        <!-- frames-buffer-size: Size of the internal storage buffer for all frames (for one stream), [10 ..] ('20' by default). -->
        <!-- The larger the buffer is, the higher performance is ensured, but memory consumption may be higher-->
        <!-- note: minimal value is 10, because of internal algorithms requirements, e.g. batching-->
        <!-- note: doesn't affect estimator API (callback-mode = 0) -->
        <param name="frames-buffer-size" type="Value::Int1" x="20" />

        <!-- callback-buffer-size: Buffer size for the callbacks. The larger the buffer is, the higher performance is ensured, but memory consumption may be higher, [1..] ('20' by default). -->
        <!-- note: doesn't affect estimator API (callback-mode = 0) -->
        <param name="callback-buffer-size" type="Value::Int1" x="20" />

        <!-- tracking-results-buffer-size: Max buffer size for the stored tracking results (max count of frames tracking results are stored for) -->
        <!-- parameter explicitly sets max size of frames sliding window, all tracking calculations take place in, before they can be delivered to user -->
        <!-- note: the parameter can limit some other params (like "reid-matching-detections-count") -->
        <param name="tracking-results-buffer-size" type="Value::Int1" x="20" />

        <!-- detector-scaling: Scale frame before detection/FRG for performance reasons, [0, 1] ('1' by default). -->
        <param name="detector-scaling" type="Value::Int1" x="1" />

        <!-- scale-result-size: If scaling is enable, frame will be scaled to this size in pixels for detection step (by the max dimension of width/height). -->
        <!-- Upper scaling is not possible. ('640 by default') -->
        <param name="scale-result-size" type="Value::Int1" x="640" />

        <!-- maxDetectionCount: Maximum detections count ('20' by default) -->
        <param name="max-detection-count" type="Value::Int1" x="20" />

        <!-- minimalTrackLength: Minimum detections (detect/redetect) count for track (see `TrackInfo::detectionsCount`) to return it in tracking results (parameter is ignored for human tracking) ('1' by default) -->
        <!-- Default value 1 allows user to get all tracks data, but there can be short tracks, because of detector faults, so users should implement their own logic to filter such tracks -->
        <param name="minimal-track-length" type="Value::Int1" x="1" />

        <!-- trackerType: Type of tracker to use ['kcf', 'opencv', 'carkalman', 'vlTracker', 'none'] ('kcf' by default) -->
        <param name="tracker-type" type="Value::String" text="opencv" />

        <!-- kill-intersected-detections: Flag to kill intersected detections ('1' by default) -->
        <param name="kill-intersected-detections" type="Value::Int1" x="1" />

         <!-- kill-intersection-value: tracks with IOU > value, will be killed ('0.55' by default) -->
         <param name="kill-intersection-value" type="Value::Float1" x="0.55"/>
    </section>

    <!-- FRG -->
    <section name="FRG">
        <!-- frg-subtractor-type: Type of FRG algorithm to use ['MOG'] ('MOG' by default) -->
        <param name="frg-subtractor-type" type="Value::String" text="MOG" />

        <!-- use-binary-frg: Flag to use binary FRG (if any region found by FRG, then full frame used for detection. if flag is 0, then regions are used for detection.) -->
        <param name="use-binary-frg" type="Value::Int1" x="1" />

        <!-- frg-update-step: update step of FRG mask (measured in frames count). Shoud be greater or equal to `detector-step` -->
        <param name="frg-update-step" type="Value::Int1" x="20" />

        <!-- frg-scale-size: Size of calculated FRG mask, used to find regions. Higher values increase accuracy, but decrease performance. Should be lower, than `scale-result-size` -->
        <!-- note: not used for `MOG` FRG type (for `MOG` scaling is 0.25 from `scale-result-size`(original frame size if `detector-scaling` is 0)) -->
        <param name="frg-scale-size" type="Value::Int1" x="160" />
    </section>

    <!-- Vehicle tracking specific parameters -->
    <section name="vehicle">
        <!-- best-shots-number-for-track: Number of best shots for track ('2' by default) -->
        <param name="best-shots-number-for-track" type="Value::Int1" x="2" />

        <!-- max-processing-fragments-count: Maximum fragments for stream being processed in time. Zero value means no limit ('1' by default). -->
        <param name="max-processing-fragments-count" type="Value::Int1" x="1" />
    </section>

    <!-- Face tracking specific parameters -->
    <section name="face">
        <!-- face-landmarks-detection: Flag to enable face landmarks detection. Disabling it improves performance ('1' by default)  -->
        <param name="face-landmarks-detection" type="Value::Int1" x="1" />
    </section>

    <!-- Human tracking specific parameters -->
    <section name="human">
        <!-- human-landmarks-detection: Flag to enable human landmarks detection. Disabling it improves performance ('1' by default)  -->
        <param name="human-landmarks-detection" type="Value::Int1" x="0" />

        <!-- remove-overlapped-strategy: strategy, used for removing overlapped detections after (re)detect ['none', 'both', 'score'] ('score' by default) -->
        <param name="remove-overlapped-strategy" type="Value::String" text="score" />

        <!-- remove-horizontal-ratio: width to height ratio threshold, used for removing horizontal detections ('1.6' by default)  -->
        <param name="remove-horizontal-ratio" type="Value::Float1" x="1.6"/>

        <!-- iou-connection-threshold: IOU value threshold, used for matching tracks and detections ('0.5' by default)  -->
        <param name="iou-connection-threshold" type="Value::Float1" x="0.5"/>

        <!-- use-reid: Flag to use reID of body tracks or not. ('1' by default)  -->
        <!-- This feature improves accuracy of human tracking, but reduces performance., [0, 1] ('1' by default). -->
        <param name="use-body-reid" type="Value::Int1" x="1"/>

       <!-- body-reid-version: version of reID network for bodies. -->
       <param name="body-reid-version" type="Value::Int1" x="108"/>

       <!-- reid-matching-threshold: reID value threshold, used for matching tracks to each other ('0.85' by default)  -->
       <param name="reid-matching-threshold" type="Value::Float1" x="0.85"/>

       <!-- count of detections, that track must have to be matched by reID ('7' by default, min value '1') -->
       <param name="reid-matching-detections-count" type="Value::Int1" x="7" />

       <!-- inactive-tracks-lifetime: lifetime of inactive body tracks, which are used for reID. It's measured in frames count and used for matching tracks to each other ('100' by default) -->
       <!-- note, higher values lead to better quality of reidentification, but reduce performance -->
       <param name="inactive-tracks-lifetime" type="Value::Int1" x="100" />
    </section>

    <!-- Detectors -->
    <section name="detectors">
        <!-- use-face-detector: Flag to use or not face detection -->
        <param name="use-face-detector" type="Value::Int1" x="1" />

        <!-- use-body-detector: Flag to use or not body detection -->
        <param name="use-body-detector" type="Value::Int1" x="0" />

        <!-- use-vehicle-detector: Flag to use or not vehicle detection -->
        <param name="use-vehicle-detector" type="Value::Int1" x="0" />

        <!-- use-license-plate-detector: Flag to use or not license plate detection -->
        <param name="use-license-plate-detector" type="Value::Int1" x="0" />
    </section>

    <!-- Experimental parameters (these params can be removed, renamed or moved to other sections in future updates) -->
    <section name="experimental">
        <!-- detect-max-batch-size: max batch size for detect to limit memory consumption. Default value 0 means no limit. -->
        <param name="detect-max-batch-size" type="Value::Int1" x="0" />

        <!-- redetect-max-batch-size: max batch size for redetect to limit memory consumption. Default value 0 means no limit. -->
        <param name="redetect-max-batch-size" type="Value::Int1" x="0" />

        <!-- tracker-max-batch-size: max batch size for tracker to limit memory consumption. Default value 0 means no limit. -->
        <param name="tracker-max-batch-size" type="Value::Int1" x="0" />

        <!-- reid-max-batch-size: max batch size for reID to limit memory consumption. Default value 0 means no limit. -->
        <param name="reid-max-batch-size" type="Value::Int1" x="0" />
    </section>
 
    <!-- Debug parameters -->
    <section name="debug">
        <!-- save-debug-info: Flag to calculate and enable extra info in tracking results for debug purposes (e.g. FRG masks) -->
        <param name="save-debug-info" type="Value::Int1" x="0" />

        <!-- show-profiling-data: Flag to show or not profile data on TrackEngine deinit, [0, 1] ('0' by default). -->
        <param name="show-profiling-data" type="Value::Int1" x="0" />

        <!-- save-buffer-log: Flag to save buffers size for each frame on TrackEngine deinit, [0, 1] ('0' by default). -->
        <param name="save-buffer-log" type="Value::Int1" x="0" />

        <!-- batched-processing: Process streams frames in batch or separately, [0, 1] ('1' by default). -->
        <param name="batched-processing" type="Value::Int1" x="1" />
    </section>

</settings>
